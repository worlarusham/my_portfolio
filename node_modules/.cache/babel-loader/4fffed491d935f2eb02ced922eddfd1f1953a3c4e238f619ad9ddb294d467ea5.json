{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\worlar\\\\Web Development Projects\\\\worlar\\\\portfolio\\\\portfolio\\\\src\\\\components\\\\Loader.js\",\n  _s = $RefreshSig$();\nimport React, { memo, useEffect } from 'react';\nimport './Loader.css'; // Import the CSS for the ellipsis animation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Loader = /*#__PURE__*/_s(/*#__PURE__*/memo(_c = _s(({\n  onLoadingComplete\n}) => {\n  _s();\n  useEffect(() => {\n    // Detect user's device theme and update the body class\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    const updateBodyClass = isDarkMode => {\n      document.body.classList.toggle('dark', isDarkMode);\n    };\n    updateBodyClass(mediaQuery.matches); // Set initial theme\n    const handleChange = e => updateBodyClass(e.matches);\n    mediaQuery.addEventListener('change', handleChange);\n    return () => mediaQuery.removeEventListener('change', handleChange);\n  }, []);\n  useEffect(() => {\n    const timer = setTimeout(onLoadingComplete, 1500); // Simulate loading for 1.5 seconds\n    return () => clearTimeout(timer);\n  }, [onLoadingComplete]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 z-50 flex items-center justify-center bg-loader\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lds-ellipsis\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}, \"3ubReDTFssvu4DHeldAg55cW/CI=\")), \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n_c2 = Loader;\nexport default Loader;\nvar _c, _c2;\n$RefreshReg$(_c, \"Loader$memo\");\n$RefreshReg$(_c2, \"Loader\");","map":{"version":3,"names":["React","memo","useEffect","jsxDEV","_jsxDEV","Loader","_s","_c","onLoadingComplete","mediaQuery","window","matchMedia","updateBodyClass","isDarkMode","document","body","classList","toggle","matches","handleChange","e","addEventListener","removeEventListener","timer","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/worlar/Web Development Projects/worlar/portfolio/portfolio/src/components/Loader.js"],"sourcesContent":["import React, { memo, useEffect } from 'react';\r\nimport './Loader.css'; // Import the CSS for the ellipsis animation\r\n\r\nconst Loader = memo(({ onLoadingComplete }) => {\r\n  useEffect(() => {\r\n    // Detect user's device theme and update the body class\r\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\r\n    const updateBodyClass = (isDarkMode) => {\r\n      document.body.classList.toggle('dark', isDarkMode);\r\n    };\r\n\r\n    updateBodyClass(mediaQuery.matches); // Set initial theme\r\n    const handleChange = (e) => updateBodyClass(e.matches);\r\n    mediaQuery.addEventListener('change', handleChange);\r\n\r\n    return () => mediaQuery.removeEventListener('change', handleChange);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(onLoadingComplete, 1500); // Simulate loading for 1.5 seconds\r\n    return () => clearTimeout(timer);\r\n  }, [onLoadingComplete]);\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-loader\">\r\n      <div className=\"lds-ellipsis\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Loader;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,IAAI,EAAEC,SAAS,QAAQ,OAAO;AAC9C,OAAO,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,MAAM,gBAAAC,EAAA,cAAGL,IAAI,CAAAM,EAAA,GAAAD,EAAA,CAAC,CAAC;EAAEE;AAAkB,CAAC,KAAK;EAAAF,EAAA;EAC7CJ,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,UAAU,GAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC;IACpE,MAAMC,eAAe,GAAIC,UAAU,IAAK;MACtCC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,MAAM,EAAEJ,UAAU,CAAC;IACpD,CAAC;IAEDD,eAAe,CAACH,UAAU,CAACS,OAAO,CAAC,CAAC,CAAC;IACrC,MAAMC,YAAY,GAAIC,CAAC,IAAKR,eAAe,CAACQ,CAAC,CAACF,OAAO,CAAC;IACtDT,UAAU,CAACY,gBAAgB,CAAC,QAAQ,EAAEF,YAAY,CAAC;IAEnD,OAAO,MAAMV,UAAU,CAACa,mBAAmB,CAAC,QAAQ,EAAEH,YAAY,CAAC;EACrE,CAAC,EAAE,EAAE,CAAC;EAENjB,SAAS,CAAC,MAAM;IACd,MAAMqB,KAAK,GAAGC,UAAU,CAAChB,iBAAiB,EAAE,IAAI,CAAC,CAAC,CAAC;IACnD,OAAO,MAAMiB,YAAY,CAACF,KAAK,CAAC;EAClC,CAAC,EAAE,CAACf,iBAAiB,CAAC,CAAC;EAEvB,oBACEJ,OAAA;IAAKsB,SAAS,EAAC,+DAA+D;IAAAC,QAAA,eAC5EvB,OAAA;MAAKsB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BvB,OAAA;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC,eACX3B,OAAA;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC,eACX3B,OAAA;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC,eACX3B,OAAA;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC,kCAAC;AAACC,GAAA,GA9BG3B,MAAM;AAgCZ,eAAeA,MAAM;AAAC,IAAAE,EAAA,EAAAyB,GAAA;AAAAC,YAAA,CAAA1B,EAAA;AAAA0B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}