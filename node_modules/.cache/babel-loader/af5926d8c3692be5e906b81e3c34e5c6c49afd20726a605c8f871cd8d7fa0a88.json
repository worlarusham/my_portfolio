{"ast":null,"code":"import React,{memo,useEffect}from'react';import'./Loader.css';// Import the CSS for the ellipsis animation\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Loader=/*#__PURE__*/memo(_ref=>{let{onLoadingComplete}=_ref;useEffect(()=>{// Detect user's device theme and update the body class\nconst mediaQuery=window.matchMedia('(prefers-color-scheme: dark)');const updateBodyClass=()=>{document.body.classList.toggle('dark',mediaQuery.matches);};updateBodyClass();// Set initial theme\nmediaQuery.addEventListener('change',updateBodyClass);return()=>mediaQuery.removeEventListener('change',updateBodyClass);},[]);useEffect(()=>{const timer=setTimeout(onLoadingComplete,1500);// Simulate loading for 1.5 seconds\nreturn()=>clearTimeout(timer);},[onLoadingComplete]);return/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 z-50 flex items-center justify-center bg-loader\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"lds-ellipsis\",children:[/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"div\",{})]})});});export default Loader;","map":{"version":3,"names":["React","memo","useEffect","jsx","_jsx","jsxs","_jsxs","Loader","_ref","onLoadingComplete","mediaQuery","window","matchMedia","updateBodyClass","document","body","classList","toggle","matches","addEventListener","removeEventListener","timer","setTimeout","clearTimeout","className","children"],"sources":["C:/Users/worlar/Web Development Projects/worlar/portfolio/portfolio/src/components/Loader.js"],"sourcesContent":["import React, { memo, useEffect } from 'react';\r\nimport './Loader.css'; // Import the CSS for the ellipsis animation\r\n\r\nconst Loader = memo(({ onLoadingComplete }) => {\r\n  useEffect(() => {\r\n    // Detect user's device theme and update the body class\r\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\r\n    const updateBodyClass = () => {\r\n      document.body.classList.toggle('dark', mediaQuery.matches);\r\n    };\r\n\r\n    updateBodyClass(); // Set initial theme\r\n    mediaQuery.addEventListener('change', updateBodyClass);\r\n\r\n    return () => mediaQuery.removeEventListener('change', updateBodyClass);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(onLoadingComplete, 1500); // Simulate loading for 1.5 seconds\r\n    return () => clearTimeout(timer);\r\n  }, [onLoadingComplete]);\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-loader\">\r\n      <div className=\"lds-ellipsis\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Loader;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,IAAI,CAAEC,SAAS,KAAQ,OAAO,CAC9C,MAAO,cAAc,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvB,KAAM,CAAAC,MAAM,cAAGN,IAAI,CAACO,IAAA,EAA2B,IAA1B,CAAEC,iBAAkB,CAAC,CAAAD,IAAA,CACxCN,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAQ,UAAU,CAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CACpE,KAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,CAC5BC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,MAAM,CAAEP,UAAU,CAACQ,OAAO,CAAC,CAC5D,CAAC,CAEDL,eAAe,CAAC,CAAC,CAAE;AACnBH,UAAU,CAACS,gBAAgB,CAAC,QAAQ,CAAEN,eAAe,CAAC,CAEtD,MAAO,IAAMH,UAAU,CAACU,mBAAmB,CAAC,QAAQ,CAAEP,eAAe,CAAC,CACxE,CAAC,CAAE,EAAE,CAAC,CAENX,SAAS,CAAC,IAAM,CACd,KAAM,CAAAmB,KAAK,CAAGC,UAAU,CAACb,iBAAiB,CAAE,IAAI,CAAC,CAAE;AACnD,MAAO,IAAMc,YAAY,CAACF,KAAK,CAAC,CAClC,CAAC,CAAE,CAACZ,iBAAiB,CAAC,CAAC,CAEvB,mBACEL,IAAA,QAAKoB,SAAS,CAAC,+DAA+D,CAAAC,QAAA,cAC5EnB,KAAA,QAAKkB,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BrB,IAAA,SAAU,CAAC,cACXA,IAAA,SAAU,CAAC,cACXA,IAAA,SAAU,CAAC,cACXA,IAAA,SAAU,CAAC,EACR,CAAC,CACH,CAAC,CAEV,CAAC,CAAC,CAEF,cAAe,CAAAG,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}