{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\worlar\\\\Web Development Projects\\\\worlar\\\\portfolio\\\\portfolio\\\\src\\\\components\\\\DigitalYear.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DigitalYear = () => {\n  _s();\n  const [isAnimating, setIsAnimating] = useState(false);\n  const finalYear = \"2025\";\n  const chars = \"0123456789\";\n  const [displayYear, setDisplayYear] = useState(finalYear);\n  useEffect(() => {\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting && !isAnimating) {\n        startAnimation();\n      }\n    }, {\n      threshold: 0.5\n    });\n    observer.observe(document.getElementById('year-container'));\n    return () => observer.disconnect();\n  }, []);\n  const startAnimation = () => {\n    setIsAnimating(true);\n    setDisplayYear(\"\");\n    let iterations = 0;\n    const interval = setInterval(() => {\n      setDisplayYear(finalYear.split(\"\").map((digit, index) => {\n        if (index < iterations / 5) {\n          return finalYear[index];\n        }\n        return chars[Math.floor(Math.random() * chars.length)];\n      }).join(\"\"));\n      iterations += 1;\n      if (iterations >= finalYear.length * 5) {\n        clearInterval(interval);\n        setDisplayYear(finalYear);\n        setIsAnimating(false);\n      }\n    }, 80);\n  };\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    id: \"year-container\",\n    className: \"inline-block w-[4ch] text-center\",\n    children: displayYear\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(DigitalYear, \"FtfTEI32O50qpkbtQ3wQlycI644=\");\n_c = DigitalYear;\nexport default DigitalYear;\nvar _c;\n$RefreshReg$(_c, \"DigitalYear\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DigitalYear","_s","isAnimating","setIsAnimating","finalYear","chars","displayYear","setDisplayYear","observer","IntersectionObserver","entry","isIntersecting","startAnimation","threshold","observe","document","getElementById","disconnect","iterations","interval","setInterval","split","map","digit","index","Math","floor","random","length","join","clearInterval","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/worlar/Web Development Projects/worlar/portfolio/portfolio/src/components/DigitalYear.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst DigitalYear = () => {\r\n  const [isAnimating, setIsAnimating] = useState(false);\r\n  const finalYear = \"2025\";\r\n  const chars = \"0123456789\";\r\n  const [displayYear, setDisplayYear] = useState(finalYear);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (entry.isIntersecting && !isAnimating) {\r\n          startAnimation();\r\n        }\r\n      },\r\n      { threshold: 0.5 }\r\n    );\r\n\r\n    observer.observe(document.getElementById('year-container'));\r\n    return () => observer.disconnect();\r\n  }, []);\r\n\r\n  const startAnimation = () => {\r\n    setIsAnimating(true);\r\n    setDisplayYear(\"\");\r\n    let iterations = 0;\r\n\r\n    const interval = setInterval(() => {\r\n      setDisplayYear(finalYear\r\n        .split(\"\")\r\n        .map((digit, index) => {\r\n          if (index < iterations / 5) {\r\n            return finalYear[index];\r\n          }\r\n          return chars[Math.floor(Math.random() * chars.length)];\r\n        })\r\n        .join(\"\")\r\n      );\r\n\r\n      iterations += 1;\r\n\r\n      if (iterations >= finalYear.length * 5) {\r\n        clearInterval(interval);\r\n        setDisplayYear(finalYear);\r\n        setIsAnimating(false);\r\n      }\r\n    }, 80);\r\n  };\r\n\r\n  return (\r\n    <span id=\"year-container\" className=\"inline-block w-[4ch] text-center\">\r\n      {displayYear}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default DigitalYear;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMQ,SAAS,GAAG,MAAM;EACxB,MAAMC,KAAK,GAAG,YAAY;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAACQ,SAAS,CAAC;EAEzDP,SAAS,CAAC,MAAM;IACd,MAAMW,QAAQ,GAAG,IAAIC,oBAAoB,CACvC,CAAC,CAACC,KAAK,CAAC,KAAK;MACX,IAAIA,KAAK,CAACC,cAAc,IAAI,CAACT,WAAW,EAAE;QACxCU,cAAc,CAAC,CAAC;MAClB;IACF,CAAC,EACD;MAAEC,SAAS,EAAE;IAAI,CACnB,CAAC;IAEDL,QAAQ,CAACM,OAAO,CAACC,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CAAC;IAC3D,OAAO,MAAMR,QAAQ,CAACS,UAAU,CAAC,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAML,cAAc,GAAGA,CAAA,KAAM;IAC3BT,cAAc,CAAC,IAAI,CAAC;IACpBI,cAAc,CAAC,EAAE,CAAC;IAClB,IAAIW,UAAU,GAAG,CAAC;IAElB,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCb,cAAc,CAACH,SAAS,CACrBiB,KAAK,CAAC,EAAE,CAAC,CACTC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;QACrB,IAAIA,KAAK,GAAGN,UAAU,GAAG,CAAC,EAAE;UAC1B,OAAOd,SAAS,CAACoB,KAAK,CAAC;QACzB;QACA,OAAOnB,KAAK,CAACoB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGtB,KAAK,CAACuB,MAAM,CAAC,CAAC;MACxD,CAAC,CAAC,CACDC,IAAI,CAAC,EAAE,CACV,CAAC;MAEDX,UAAU,IAAI,CAAC;MAEf,IAAIA,UAAU,IAAId,SAAS,CAACwB,MAAM,GAAG,CAAC,EAAE;QACtCE,aAAa,CAACX,QAAQ,CAAC;QACvBZ,cAAc,CAACH,SAAS,CAAC;QACzBD,cAAc,CAAC,KAAK,CAAC;MACvB;IACF,CAAC,EAAE,EAAE,CAAC;EACR,CAAC;EAED,oBACEJ,OAAA;IAAMgC,EAAE,EAAC,gBAAgB;IAACC,SAAS,EAAC,kCAAkC;IAAAC,QAAA,EACnE3B;EAAW;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEX,CAAC;AAACpC,EAAA,CApDID,WAAW;AAAAsC,EAAA,GAAXtC,WAAW;AAsDjB,eAAeA,WAAW;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}