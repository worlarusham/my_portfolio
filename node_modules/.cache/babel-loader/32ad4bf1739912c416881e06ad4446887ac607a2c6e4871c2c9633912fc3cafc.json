{"ast":null,"code":"import React from'react';import{descriptions}from'../techDescriptions';import TechTooltip from'./TechTooltip';import{jsx as _jsx}from\"react/jsx-runtime\";const TechPill=_ref=>{var _descriptions$tech$to;let{tech,onClick,isActive}=_ref;const description=((_descriptions$tech$to=descriptions[tech.toLowerCase()])===null||_descriptions$tech$to===void 0?void 0:_descriptions$tech$to.desc.split('\\n')[0])||'';return/*#__PURE__*/_jsx(\"div\",{className:\"tech-pill\",children:/*#__PURE__*/_jsx(TechTooltip,{name:tech,description:description,onClick:onClick})});};export default TechPill;","map":{"version":3,"names":["React","descriptions","TechTooltip","jsx","_jsx","TechPill","_ref","_descriptions$tech$to","tech","onClick","isActive","description","toLowerCase","desc","split","className","children","name"],"sources":["C:/Users/worlar/Web Development Projects/worlar/portfolio/portfolio/src/components/TechPill.jsx"],"sourcesContent":["import React from 'react';\r\nimport { descriptions } from '../techDescriptions';\r\nimport TechTooltip from './TechTooltip';\r\n\r\nconst TechPill = ({ tech, onClick, isActive }) => {\r\n  const description = descriptions[tech.toLowerCase()]?.desc.split('\\n')[0] || '';\r\n\r\n  return (\r\n    <div className=\"tech-pill\">\r\n      <TechTooltip \r\n        name={tech}\r\n        description={description}\r\n        onClick={onClick}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TechPill;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,YAAY,KAAQ,qBAAqB,CAClD,MAAO,CAAAC,WAAW,KAAM,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAExC,KAAM,CAAAC,QAAQ,CAAGC,IAAA,EAAiC,KAAAC,qBAAA,IAAhC,CAAEC,IAAI,CAAEC,OAAO,CAAEC,QAAS,CAAC,CAAAJ,IAAA,CAC3C,KAAM,CAAAK,WAAW,CAAG,EAAAJ,qBAAA,CAAAN,YAAY,CAACO,IAAI,CAACI,WAAW,CAAC,CAAC,CAAC,UAAAL,qBAAA,iBAAhCA,qBAAA,CAAkCM,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAI,EAAE,CAE/E,mBACEV,IAAA,QAAKW,SAAS,CAAC,WAAW,CAAAC,QAAA,cACxBZ,IAAA,CAACF,WAAW,EACVe,IAAI,CAAET,IAAK,CACXG,WAAW,CAAEA,WAAY,CACzBF,OAAO,CAAEA,OAAQ,CAClB,CAAC,CACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAJ,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}